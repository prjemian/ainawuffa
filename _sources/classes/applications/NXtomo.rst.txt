.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXtomo.nxdl.xml

.. index::
    ! NXtomo (application definition)
    ! tomo (application definition)
    see: tomo (application definition); NXtomo

.. _NXtomo:

======
NXtomo
======

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  This is the application definition for x-ray or neutron tomography raw data.

  In tomography 
  a number of dark field images are measured, some bright field images and, of course the sample. 
  In order to distinguish between them images carry a image_key.

**Symbols**:

  These symbols will be used below to coordinate datasets with the same shape.

  **nFrames**: number of frames

  **xsize**: number of pixels in X direction

  **ysize**: number of pixels in Y direction

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXsample`, :ref:`NXsource`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXsource (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **entry**: (required) :ref:`NXentry`


    .. index:: title (field)

    **title**: (optional) :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start_time (field)

    **start_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: end_time (field)

    **end_time**: (optional) :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXtomo``

    **instrument**: (required) :ref:`NXinstrument`


      **(source)**: (optional) :ref:`NXsource`


        .. index:: type (field)

        **type**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. index:: name (field)

        **name**: (optional) :ref:`NX_CHAR <NX_CHAR>`


        .. index:: probe (field)

        **probe**: (optional) :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``neutron`` | ``x-ray`` | ``electron``

      **detector**: (required) :ref:`NXdetector`


        .. index:: data (field)

        **data[nFrames, xsize, ysize]**: (required) :ref:`NX_INT <NX_INT>`


        .. index:: image_key (field)

        **image_key[nFrames]**: (required) :ref:`NX_INT <NX_INT>`

          In order
          to distinguish between sample projectrions, dark and flat
          images, a magic number is recorded per frame.
          The key is as follows:

          * projection = 0
          * flat field = 1
          * dark field = 2
          * invalid = 3

        .. index:: x_pixel_size (field)

        **x_pixel_size**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: y_pixel_size (field)

        **y_pixel_size**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


        .. index:: distance (field)

        **distance**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Distance between detector and sample

        .. index:: x_rotation_axis_pixel_position (field)

        **x_rotation_axis_pixel_position**: (optional) :ref:`NX_FLOAT <NX_FLOAT>`


        .. index:: y_rotation_axis_pixel_position (field)

        **y_rotation_axis_pixel_position**: (optional) :ref:`NX_FLOAT <NX_FLOAT>`


    **sample**: (required) :ref:`NXsample`


      .. index:: name (field)

      **name**: (required) :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: rotation_angle (field)

      **rotation_angle[nFrames]**: (required) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

        In practice this axis is always aligned along one pixel direction on the detector and usually vertical.
        There are experiments with horizontal rotation axes, so this would need to be indicated somehow.
        For now the best way for that is an open question.

      .. index:: x_translation (field)

      **x_translation[nFrames]**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


      .. index:: y_translation (field)

      **y_translation[nFrames]**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


      .. index:: z_translation (field)

      **z_translation[nFrames]**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}


    **control**: (optional) :ref:`NXmonitor`


      .. index:: data (field)

      **data[nFrames]**: (required) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

        Total integral monitor counts for each measured frame. Allows a to correction for
        fluctuations in the beam between frames.

    **data**: (required) :ref:`NXdata`


      **data** --> /NXentry/NXinstrument/detector:NXdetector/data


      **rotation_angle** --> /NXentry/NXsample/rotation_angle


      **image_key** --> /NXentry/NXinstrument/detector:NXdetector/image_key


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/applications/NXtomo.nxdl.xml
