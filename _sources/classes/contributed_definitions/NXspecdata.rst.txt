.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source NXspecdata.nxdl.xml

.. index::
    ! NXspecdata (contributed definition)
    ! specdata (contributed definition)
    see: specdata (contributed definition); NXspecdata

.. _NXspecdata:

==========
NXspecdata
==========

**Status**:

  contributed definition, extends :ref:`NXobject`

**Description**:

  Data collected by SPEC control and data acquisition software

  SPEC [#]_ is software for instrument control
  and data acquisition in X-ray diffraction experiments.

  .. [#] SPEC: https://certif.com

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXcrystal`, :ref:`NXdata`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXnote`, :ref:`NXuser`

.. index:: NXentry (base class); used in contributed definition, NXmonitor (base class); used in contributed definition, NXdata (base class); used in contributed definition, NXnote (base class); used in contributed definition, NXinstrument (base class); used in contributed definition, NXcrystal (base class); used in contributed definition, NXuser (base class); used in contributed definition

**Structure**:

  .. index:: default (file attribute)

  **@default**: (required) :ref:`NX_CHAR <NX_CHAR>`

    .. index:: plotting

    Declares which :ref:`NXentry` group 
    contains the data to be shown by default.
    It is needed to resolve ambiguity when more than one :ref:`NXentry` group exists. 
    The value is the name of the default :ref:`NXentry` group.

  .. index:: HDF5_Version (file attribute)

  **@HDF5_Version**: (required) :ref:`NX_CHAR <NX_CHAR>`

    Version of HDF5 library used in writing the file (as specified in :ref:`NXroot`).

    Note this attribute is spelled with uppercase "V",
    different than other version attributes.

  .. index:: h5py_version (file attribute)

  **@h5py_version**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    version of h5py Python package used to write this HDF5 file

  .. index:: SPEC_file (file attribute)

  **@SPEC_file**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    original SPEC data file name from **#F** line in file header

  .. index:: SPEC_date (file attribute)

  **@SPEC_date**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    date from **#D** line in file header, in ISO8601 format

  .. index:: SPEC_epoch (file attribute)

  **@SPEC_epoch**: (required) :ref:`NX_INT <NX_INT>`

    UNIX time epoch from **#E** line in file header

  .. index:: SPEC_comments (file attribute)

  **@SPEC_comments**: (optional) :ref:`NX_CHAR <NX_CHAR>`

    any **#C** lines in file header, stored as one string with newlines between comments

  .. index:: SPEC_num_headers (file attribute)

  **@SPEC_num_headers**: (optional) :ref:`NX_INT <NX_INT>`

    Number of header sections found in the spec file

  **(entry)**: (required) :ref:`NXentry`

    one scan from a SPEC data file, starts with a **#S** line

    .. index:: default (group attribute)

    **@default**: (required) :ref:`NX_CHAR <NX_CHAR>`

      .. index:: plotting

      Declares which :ref:`NXdata` group 
      contains the data to be shown by default.
      It is needed to resolve ambiguity when more than one :ref:`NXdata` group exists. 
      The value is the name of the default :ref:`NXdata` group.

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this subentry conforms.

      Obligatory value:  ``NXspecdata``

    .. index:: scan_number (field)

    **scan_number**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

      SPEC scan number

    .. index:: title (field)

    **title**: (required) :ref:`NX_CHAR <NX_CHAR>`

      SPEC scan number and command, from **#S** line

      SPEC data file line::

          #S 1  cscan en 690 750 60 0

      *title*::

          1  cscan en 690 750 60 0


    .. index:: command (field)

    **command**: (required) :ref:`NX_CHAR <NX_CHAR>`

      SPEC scan command, from **#S** line, after the scan number.

      :SPEC data file line: ``#S 1  cscan en 690 750 60 0``

      :command*:  ``cscan en 690 750 60 0``

    .. index:: date (field)

    **date**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>`

      date from **#D** line in scan header, in ISO8601 format

    .. index:: comments (field)

    **comments**: (required) :ref:`NX_CHAR <NX_CHAR>`

      Any **#C** lines in this scan, stored as one string with newlines between comments

    .. index:: Q (field)

    **Q**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

      **#Q** -- :math:`Q` (:math:`hkl`) at start of scan

      array of [:math:`h` :math:`k` :math:`l`]

    .. index:: TEMP_SP (field)

    **TEMP_SP**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

      **#X** -- temperature set point

    .. index:: DEGC_SP (field)

    **DEGC_SP**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

      **#X** -- temperature set point (C)

    **(monitor)**: (required) :ref:`NXmonitor`


      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: mode (field)

      **mode**: (required) :ref:`NX_CHAR <NX_CHAR>`

        Count to a preset value based on either clock time 
        (timer) or received monitor counts (monitor).

        Any of these values: ``monitor`` | ``timer``

      .. index:: preset (field)

      **preset**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        preset value for time or monitor

        * **#M** -- counting against this constant monitor count (see #T)
        * **#T** -- counting against this constant number of seconds (see #M)

        .. index:: units (field attribute)

        **@units**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: data (field)

      **data**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        array(s) of monitor data

      .. index:: count_time (field)

      **count_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        array(s) of monitor data

    **data**: (required) :ref:`NXdata`

      detector (and MCA) data from this scan

      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: signal (group attribute)

      **@signal**: (required) :ref:`NX_CHAR <NX_CHAR>`

        name of the field with the plottable data, typically the last column for 1-D scans

        This is the primary dependent axis, such as two-theta detector.
        This field must exist (or be linked) in this :ref:`NXdata` group.

      .. index:: axes (group attribute)

      **@axes**: (required) :ref:`NX_CHAR <NX_CHAR>`

        name(s) of the field(s) for plotting the data, typically the first column for 1-D scans

        These are the independent axes, such as positioners.  For 2-D or higher 
        dimension data, there will be a field named for each dimension,
        separated by ":" (preferred) or "," or " " (whitespace).

        Such as for 2-D data plotted against *energy* and *th*::

            @axes = energy:th

        This(these) field(s) must exist (or be linked) in this :ref:`NXdata` group.

      .. index:: AXISNAME_indices (group attribute)

      **@AXISNAME_indices**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        For each field named in *@axes*, there will be an instance of this attribute,
        defining into which dimensions of the *@signal* data this field applies.
        The value of this attribute is a list of index numbers using 0-based indexing
        (first dimension is 0, seconds i 1, ...).

        Such as for 2-D data plotted against *energy* and *th*::

            @energy_indices = [0]
            @th_indices = [1]


      .. index:: data (field)

      **data**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        one column of data from the scan

        HDF5 requires that each member of a group must have a unique name.

        Pick the name of column from **#L** but make it unique which means if the same
        name is used in more than one column, append a number to the extra instances
        to make them unique yet preserve their content, just in case they might be different.

        Example: ``seconds seconds`` becomes ``seconds`` and ``seconda_1``.

        .. index:: spec_name (field attribute)

        **@spec_name**: (required) :ref:`NX_CHAR <NX_CHAR>`

          name as specified in **#L** line, before it was made unique for HDF5

        .. index:: units (field attribute)

        **@units**: (required) :ref:`NX_CHAR <NX_CHAR>`

          Unless stated otherwise, units (not declared in the SPEC data file) 
          are assumed to be *counts* for detectors and "unknown" for 
          positioners or other scan columns.

      .. index:: intensity_factor (field)

      **intensity_factor**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        **#I** -- intensity normalizing factor

      .. index:: _mca_ (field)

      **_mca_**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: _mca_channel_ (field)

      **_mca_channel_**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: _mca1_ (field)

      **_mca1_**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: _mca1_channel_ (field)

      **_mca1_channel_**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


    **counter_cross_reference**: (required) :ref:`NXnote`

      associates values declared in **#J** and **#j** scan header lines

      .. index:: comment (group attribute)

      **@comment**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


    **positioner_cross_reference**: (required) :ref:`NXnote`

      associates values declared in **#O** and **#o** scan header lines

      .. index:: comment (group attribute)

      **@comment**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


    **spec**: (required) :ref:`NXinstrument`

      various metadata from the SPEC scan header that have well-known NeXus base clases

      **UB**: (required) :ref:`NXcrystal`

        Orientation matrix of single crystal sample using Busing-Levy convention

        .. index:: orientation_matrix (field)

        **orientation_matrix[3, 3]**: (required) :ref:`NX_FLOAT <NX_FLOAT>`

          **#G3** line in scan header

    **G**: (required) :ref:`NXnote`

      SPEC geometry variables for this diffractometer geometry (instrument specific)

      TODO: give interpreted name for each array value (need to figure out how to get the names)

      .. index:: comment (group attribute)

      **@comment**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: G0 (field)

      **G0**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        geometry parameters from G[] array (geo mode, sector, etc)

      .. index:: G1 (field)

      **G1**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        geometry parameters from U[] array (lattice constants, orientation reflections)

      .. index:: G2 (field)

      **G2**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        not used, although some files has a single zero value

      .. index:: G4 (field)

      **G4**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        geometry parameters from Q[] array (lambda, frozen angles, cut points, etc)

    **positioners**: (required) :ref:`NXnote`

      names and values of all positioners (**#O** and **#P** lines) in scan header

      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: positioner (field)

      **positioner**: (required) :ref:`NX_NUMBER <NX_NUMBER>`

        one positioner from the scan header

        HDF5 requires that each member of a group must have a unique name.

        SPEC assigns a unique name to each positioner, no extra work is neccesary
        to comply with the HDF5 rule for unique names in a group.

    **MCA**: (required) :ref:`NXnote`

      **#@CALIB** -- coefficients to compute a scale based on the MCA channel number

      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: preset_time (field)

      **preset_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: elapsed_live_time (field)

      **elapsed_live_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: elapsed_real_time (field)

      **elapsed_real_time**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: number_saved (field)

      **number_saved**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: first_saved (field)

      **first_saved**: (required) :ref:`NX_INT <NX_INT>`


      .. index:: last_saved (field)

      **last_saved**: (required) :ref:`NX_INT <NX_INT>`


      .. index:: reduction_coef (field)

      **reduction_coef**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: calib_a (field)

      **calib_a**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: calib_b (field)

      **calib_b**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      .. index:: calib_c (field)

      **calib_c**: (required) :ref:`NX_NUMBER <NX_NUMBER>`


      **ROI**: (required) :ref:`NXnote`


        .. index:: roiN (field)

        **roiN**: (required) :ref:`NX_CHAR <NX_CHAR>`

          numbered regions of interest, use an index number as part of the name

          .. index:: description (field attribute)

          **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`

            ``first_channel, last_channel``

          .. index:: first_channel (field attribute)

          **@first_channel**: (required) :ref:`NX_INT <NX_INT>`


          .. index:: last_channel (field attribute)

          **@last_channel**: (required) :ref:`NX_INT <NX_INT>`


    **metadata**: (required) :ref:`NXnote`

      SPEC metadata (UNICAT-style #H and #V lines)

      This is a block that may be unique to SPEC files acquired at certain
      APS beam lines.  Other facilities or instruments may use this block
      for storing key:value pairs of data where the values have suitable 
      attributes (such as units).

      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


    **SPEC_user**: (required) :ref:`NXuser`


      .. index:: SPEC_user (field)

      **SPEC_user**: (required) :ref:`NX_CHAR <NX_CHAR>`

        user name from first **#C** line in file header

    **_unrecognized**: (required) :ref:`NXnote`

      Fallback for any SPEC data file control lines not otherwise placed 
      into groups or fields elsewhere in this specification.

      .. index:: comment (group attribute)

      **@comment**: (required) :ref:`NX_CHAR <NX_CHAR>`


      .. index:: description (group attribute)

      **@description**: (required) :ref:`NX_CHAR <NX_CHAR>`


**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/master/contributed_definitions/NXspecdata.nxdl.xml
